name: Build and Deploy

on:
  push:
    branches:
      - main # Adjust if your main branch has a different name
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x' # Adjust to the Python version you're using

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Add pyinstaller
        run: poetry add pyinstaller

      - name: Build executable
        run: poetry run pyinstaller --onefile --windowed --icon=media/icon.ico --add-data "parfile/gui:parfile/gui" parfile/app.py --name parfile

      - name: Zip the executable
        run: 7z a parfile.zip ./dist/parfile.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }} # Example tag name, adjust as needed
          release_name: Release v${{ github.run_number }} # Example release name, adjust as needed
          draft: false
          prerelease: false

      - name: Set release outputs
        run: echo "version=${{ steps.create_release.outputs.version }}" >> $GITHUB_ENV
        shell: bash

      - name: Set upload URL output
        run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV
        shell: bash

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.upload_url }}
          asset_path: ./parfile.zip
          asset_name: parfile.zip
          asset_content_type: application/zip

