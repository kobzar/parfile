
name: Build and Release Windows Executable

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Poetry
        run: |
          Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -OutFile get-poetry.py
          .\get-poetry.py
          $env:PATH="$env:USERPROFILE\.poetry\bin;$env:PATH"
          poetry --version

      - name: Install dependencies
        run: poetry install

      - name: Build Windows executable
        run: |
          poetry run pyinstaller --onefile --windowed --icon=media/icon.ico --add-data "parfile/gui;parfile/gui" parfile/app.py --name parfile

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0  # Set your desired tag name
          release_name: Release 1.0.0  # Set your desired release name
          body: |
            Describe your release here.

          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./parfile/dist/parfile.exe  # Adjust the path to your executable file
          asset_name: parfile.exe
          asset_content_type: application/octet-stream

# on:
#   push:
#     branches:
#       - main
#
# jobs:
#   build-and-release:
#     runs-on: windows-latest
#
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.x
#
#       - name: Install Poetry
#         run: |
#           pipx install poetry
#
#       - name: Check enviroment
#         run: |
#           python -V
#           poetry --version
#
#       - name: Install dependencies
#         run: |
#           poetry install
#           poetry add pyinstaller
#
#       - name: Build Windows executable
#         run: |
#           poetry run pyinstaller --onefile --windowed --icon=media/icon.ico --add-data "parfile/gui:parfile/gui" parfile/app.py --name parfile
#
#       - name: Upload Build Artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: windows-executable
#           path: dist/*.exe  # Upload all executables in the dist directory
