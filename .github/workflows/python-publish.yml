name: Build and Release Windows Executable


on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install Poetry
        run: |
          pipx install poetry

      - name: Check enviroment
        run: |
          python -V
          poetry --version

      - name: Install dependencies
        run: |
          poetry install
          poetry add pyinstaller

      - name: Build Windows executable
        run: |
          poetry run pyinstaller --onefile --windowed --icon=media/icon.ico --add-data "parfile/gui:parfile/gui" parfile/app.py --name parfile

      # - name: Upload executable to Release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dist/parfile.exe
      #     asset_name: parfile.exe
      #     asset_content_type: application/octet-stream
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: executable

      # Upload release using `gh` (replace with API calls if not using `gh`)
      - name: Create Release (using gh)
        uses: actions/checkout@v2

      - name: Upload Release (using gh)
        run: |
          gh release create ${{ github.sha }} -t "Automatic Release (built on ${{ github.sha }})" -b "Built from commit ${{ github.sha }}" --asset ./artifacts/executable/parfile.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
