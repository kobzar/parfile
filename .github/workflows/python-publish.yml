name: Build and Release Windows Executable

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Poetry
        run: |
          pipx install poetry

      - name: Check enviroment
        run: |
          python -V
          poetry --version

      - name: Install dependencies
        run: |
          poetry install
          poetry add pyinstaller

      - name: Build Windows executable
        run: |
          poetry export -f wheel  # Create wheel files for dependencies
          pyinstaller \
            --onefile \
            --windowed \  # Add if your application requires a window
            --name "parfile" \
            --add-data "parfile/media;parfile/media" \
            --add-data "parfile/gui;." \
            -i "parfile/media/icon.ico" \
            parfile/app.py  # Assuming your main script is app.py
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0  # Set your desired tag name
          release_name: Release 1.0.0  # Set your desired release name
          body: |
            Release Parfile

          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .dist/parfile.exe  # Adjust the path to your exe file
          asset_name: parfile.exe
          asset_content_type: application/octet-stream

